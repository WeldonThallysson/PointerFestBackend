{"version":3,"sources":["../../../src/controllers/Bin/binRestoreItemsController.ts","../../../src/prisma/index.ts","../../../src/services/Bin/binRestoreItemsService.ts"],"sourcesContent":["import {Request, Response} from 'express'\r\nimport { BinRestoreItemsService } from '../../services/Bin/binRestoreItemsService'\r\n\r\n\r\n\r\nclass BinRestoreItemsController {\r\n    async handle(req: Request, res: Response){\r\n        const {\r\n            id,\r\n        } = req.params\r\n\r\n        const binRegisterMoveItems = new BinRestoreItemsService()\r\n\r\n        const responseBinRegisterMoveItems = await binRegisterMoveItems.execute({\r\n            id: id,\r\n        })\r\n\r\n        return res.status(responseBinRegisterMoveItems.data.status).json(responseBinRegisterMoveItems.data)\r\n \r\n    }\r\n}\r\n\r\nexport {BinRestoreItemsController}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prismaClient = new PrismaClient()\r\n\r\nexport default prismaClient;\r\n","import prismaClient from \"../../prisma\";\r\n\r\ninterface IBinRestoreItemsService {\r\n    id?: string | null;\r\n\r\n}\r\n\r\nclass BinRestoreItemsService {\r\n    async execute({id}: IBinRestoreItemsService){\r\n        if(!id){\r\n            return {\r\n                message: \"Informe o ID do item na lixeira\",\r\n                status: 400\r\n            }\r\n        }  \r\n\r\n        const itemBinExists = await prismaClient.bin.findUnique({\r\n            where: {\r\n                id: id,\r\n            }\r\n        })\r\n    \r\n        if(!itemBinExists){\r\n            return {\r\n                message: \"Não foi possível prosseguir com a ação, item não encontrado na lixeira\",\r\n                status: 404\r\n            }\r\n        } \r\n\r\n        try {\r\n             await prismaClient.$executeRawUnsafe(`\r\n                INSERT INTO ${itemBinExists.tableName}(${Object.keys(itemBinExists.data).join(\", \")})\r\n                VALUES (${Object.values(itemBinExists.data).map((value) => `'${value}`).join(\", \")})\r\n                `)\r\n\r\n                await prismaClient.bin.delete({\r\n                    where: { id }\r\n                });\r\n\r\n                return {\r\n                    data: {\r\n                        message: \"Item restaurado com sucesso\",\r\n                        status: 200\r\n                    }\r\n                  \r\n                };\r\n        }\r\n        catch(err){\r\n            return {\r\n                message: `Ocorreu um erro na restauração do item: ${err}`,\r\n                status: 500\r\n            }\r\n\r\n        }\r\n    }   \r\n}\r\n\r\nexport {BinRestoreItemsService}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAA6B;AAE7B,IAAM,eAAe,IAAI,2BAAa;AAEtC,IAAO,iBAAQ;;;ACGf,IAAM,yBAAN,MAA6B;AAAA,EACnB,QAAQ,IAA8B;AAAA,+CAA9B,EAAC,GAAE,GAA2B;AACxC,UAAG,CAAC,IAAG;AACH,eAAO;AAAA,UACH,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AAAA,MACJ;AAEA,YAAM,gBAAgB,MAAM,eAAa,IAAI,WAAW;AAAA,QACpD,OAAO;AAAA,UACH;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAG,CAAC,eAAc;AACd,eAAO;AAAA,UACH,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AAAA,MACJ;AAEA,UAAI;AACC,cAAM,eAAa,kBAAkB;AAAA,8BACpB,cAAc,SAAS,IAAI,OAAO,KAAK,cAAc,IAAI,EAAE,KAAK,IAAI,CAAC;AAAA,0BACzE,OAAO,OAAO,cAAc,IAAI,EAAE,IAAI,CAAC,UAAU,IAAI,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC;AAAA,iBACjF;AAED,cAAM,eAAa,IAAI,OAAO;AAAA,UAC1B,OAAO,EAAE,GAAG;AAAA,QAChB,CAAC;AAED,eAAO;AAAA,UACH,MAAM;AAAA,YACF,SAAS;AAAA,YACT,QAAQ;AAAA,UACZ;AAAA,QAEJ;AAAA,MACR,SACM,KAAI;AACN,eAAO;AAAA,UACH,SAAS,iDAA2C,GAAG;AAAA,UACvD,QAAQ;AAAA,QACZ;AAAA,MAEJ;AAAA,IACJ;AAAA;AACJ;;;AFlDA,IAAM,4BAAN,MAAgC;AAAA,EACtB,OAAO,KAAc,KAAc;AAAA;AACrC,YAAM;AAAA,QACF;AAAA,MACJ,IAAI,IAAI;AAER,YAAM,uBAAuB,IAAI,uBAAuB;AAExD,YAAM,+BAA+B,MAAM,qBAAqB,QAAQ;AAAA,QACpE;AAAA,MACJ,CAAC;AAED,aAAO,IAAI,OAAO,6BAA6B,KAAK,MAAM,EAAE,KAAK,6BAA6B,IAAI;AAAA,IAEtG;AAAA;AACJ;","names":[]}