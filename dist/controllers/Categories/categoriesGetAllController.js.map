{"version":3,"sources":["../../../src/controllers/Categories/categoriesGetAllController.ts","../../../src/prisma/index.ts","../../../src/services/Categories/categoriesGetAllService.ts"],"sourcesContent":["import { Request,Response } from \"express\";\r\nimport { CategoriesGetAllService,  } from \"../../services/Categories/categoriesGetAllService\";\r\n\r\n\r\nclass CategoriesGetAllController {\r\n    async handle(req: Request, res: Response){\r\n        const {\r\n            label,\r\n            limit,\r\n            name,\r\n            page\r\n        } = req.body\r\n                \r\n        const categoriesGetAllController = new CategoriesGetAllService()\r\n        const responseCategoriesGetAllController = await categoriesGetAllController.execute({\r\n            label,\r\n            limit,\r\n            name,\r\n            page\r\n        })\r\n\r\n        return res.json(responseCategoriesGetAllController)\r\n    }\r\n\r\n}\r\n\r\nexport {CategoriesGetAllController}","import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prismaClient = new PrismaClient()\r\n\r\nexport default prismaClient;\r\n","import { MessagesError } from \"../../constants/messages.api\";\r\nimport prismaClient from \"../../prisma\";\r\n\r\ninterface ICategoriesGetAllService {\r\n  name?: string | null;\r\n  label?: string | null;\r\n  page?: number | null;\r\n  limit?: number | null;\r\n}\r\n\r\nclass CategoriesGetAllService {\r\n  async execute({ name, label,page, limit }: ICategoriesGetAllService) {\r\n    try {\r\n      const where: any = \"\";\r\n\r\n      if (name) where.name = { contains: name, mode: \"insensitive\" };\r\n      if (label) where.label = { contains: label, mode: \"insensitive\" };\r\n  \r\n  \r\n     const shouldPaginate = page !== undefined || limit !== undefined;\r\n     const skip = shouldPaginate ? ((page ?? 1) - 1) * (limit ?? 10) : undefined;\r\n     const take = shouldPaginate ? limit ?? 10 : undefined\r\n  \r\n      const categories = await prismaClient.categories.findMany({\r\n        where,\r\n        skip,\r\n        take,\r\n        orderBy: { created_At: \"desc\" },\r\n    \r\n      });\r\n  \r\n      const totalCategories = await prismaClient.categories.count()\r\n      const totalPages = shouldPaginate ? Math.ceil(totalCategories / (limit ?? 10)) : 1\r\n  \r\n      return {\r\n        items: categories,\r\n        totalItems: totalCategories,\r\n        totalPages: totalPages,\r\n        currentPage: shouldPaginate ? page ?? 1 : 1,\r\n        status: 200,\r\n      }\r\n     \r\n    } catch(err){\r\n      return {\r\n            data: {\r\n              message: `${MessagesError.GetAllMessageError} ${err}`,\r\n              status: 500,\r\n            },\r\n          };\r\n    }\r\n  \r\n    \r\n   }\r\n}\r\n\r\nexport { CategoriesGetAllService };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAA6B;AAE7B,IAAM,eAAe,IAAI,2BAAa;AAEtC,IAAO,iBAAQ;;;ACMf,IAAM,0BAAN,MAA8B;AAAA,EACtB,QAAQ,IAAuD;AAAA,+CAAvD,EAAE,MAAM,OAAM,MAAM,MAAM,GAA6B;AACnE,UAAI;AACF,cAAM,QAAa;AAEnB,YAAI,KAAM,OAAM,OAAO,EAAE,UAAU,MAAM,MAAM,cAAc;AAC7D,YAAI,MAAO,OAAM,QAAQ,EAAE,UAAU,OAAO,MAAM,cAAc;AAGjE,cAAM,iBAAiB,SAAS,UAAa,UAAU;AACvD,cAAM,OAAO,mBAAmB,sBAAQ,KAAK,MAAM,wBAAS,MAAM;AAClE,cAAM,OAAO,iBAAiB,wBAAS,KAAK;AAE3C,cAAM,aAAa,MAAM,eAAa,WAAW,SAAS;AAAA,UACxD;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAS,EAAE,YAAY,OAAO;AAAA,QAEhC,CAAC;AAED,cAAM,kBAAkB,MAAM,eAAa,WAAW,MAAM;AAC5D,cAAM,aAAa,iBAAiB,KAAK,KAAK,mBAAmB,wBAAS,GAAG,IAAI;AAEjF,eAAO;AAAA,UACL,OAAO;AAAA,UACP,YAAY;AAAA,UACZ;AAAA,UACA,aAAa,iBAAiB,sBAAQ,IAAI;AAAA,UAC1C,QAAQ;AAAA,QACV;AAAA,MAEF,SAAQ,KAAI;AACV,eAAO;AAAA,UACD,MAAM;AAAA,YACJ,SAAS,iFAAmC,IAAI,GAAG;AAAA,YACnD,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACN;AAAA,IAGD;AAAA;AACH;;;AFjDA,IAAM,6BAAN,MAAiC;AAAA,EACvB,OAAO,KAAc,KAAc;AAAA;AACrC,YAAM;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ,IAAI,IAAI;AAER,YAAM,6BAA6B,IAAI,wBAAwB;AAC/D,YAAM,qCAAqC,MAAM,2BAA2B,QAAQ;AAAA,QAChF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAC;AAED,aAAO,IAAI,KAAK,kCAAkC;AAAA,IACtD;AAAA;AAEJ;","names":[]}