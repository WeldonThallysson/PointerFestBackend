{"version":3,"sources":["../../../src/services/Events/cadastrarEventoService.ts","../../../src/prisma/index.ts"],"sourcesContent":["import prismaClient from \"../../prisma\";\r\n\r\ninterface CadastrarEventoType {\r\n  idUserOwner: string;\r\n  idProduct: string;\r\n  name: string;\r\n  description: string;\r\n  localityEvent: string;\r\n  urlLocalityEvent: string;\r\n  bannerImageUrl: string;\r\n  dateEvent: string;\r\n  hourEvent: string;\r\n  idCategory: string; \r\n  restrictionsEvent?: string;\r\n  placesPurchaseTicket: string;\r\n  urlPostSocialNetwork: string;\r\n  phoneForContact?: string;\r\n}\r\n\r\nclass CadastrarEventoService {\r\n  async execute({\r\n    idUserOwner,\r\n    idProduct,\r\n    idCategory,\r\n    name,\r\n    description,\r\n    localityEvent,\r\n    urlLocalityEvent,\r\n    bannerImageUrl,\r\n    dateEvent,\r\n    hourEvent,\r\n    restrictionsEvent,\r\n    placesPurchaseTicket,\r\n    urlPostSocialNetwork,\r\n    phoneForContact,\r\n  }: CadastrarEventoType) {\r\n\r\n\r\n    //idUserOwner\r\n\r\n\r\n\r\n    const eventoExiste = await prismaClient.events.findFirst({\r\n      where: {\r\n        name: name,\r\n      },\r\n    });\r\n    if (eventoExiste) {\r\n      return {\r\n        message: \"Essa evento j√° existe\",\r\n        status: 400,\r\n      };\r\n    }\r\n    const cadastrarEvento = await prismaClient.events.create({\r\n      data: {\r\n        idUserOwner: idUserOwner,\r\n        name: name,\r\n        description: description,\r\n        idProduct: idProduct,\r\n        idCategory: idCategory,\r\n        localityEvent: localityEvent,\r\n        urlLocalityEvent: urlLocalityEvent,\r\n        bannerImageUrl: bannerImageUrl,\r\n        dateEvent: dateEvent,\r\n        hourEvent: hourEvent,\r\n\r\n        restrictionsEvent: restrictionsEvent,\r\n        placesPurchaseTicket: placesPurchaseTicket,\r\n        urlPostSocialNetwork: urlPostSocialNetwork,\r\n        phoneForContact: phoneForContact,\r\n      },\r\n    });\r\n    return cadastrarEvento;\r\n  }\r\n}\r\n\r\nexport { CadastrarEventoService };\r\n","import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prismaClient = new PrismaClient()\r\n\r\nexport default prismaClient;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAA6B;AAE7B,IAAM,eAAe,IAAI,2BAAa;AAEtC,IAAO,iBAAQ;;;ADef,IAAM,yBAAN,MAA6B;AAAA,EACrB,QAAQ,IAeU;AAAA,+CAfV;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAwB;AAOtB,YAAM,eAAe,MAAM,eAAa,OAAO,UAAU;AAAA,QACvD,OAAO;AAAA,UACL;AAAA,QACF;AAAA,MACF,CAAC;AACD,UAAI,cAAc;AAChB,eAAO;AAAA,UACL,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,MACF;AACA,YAAM,kBAAkB,MAAM,eAAa,OAAO,OAAO;AAAA,QACvD,MAAM;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UAEA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAAA;AACF;","names":[]}