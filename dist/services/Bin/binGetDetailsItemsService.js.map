{"version":3,"sources":["../../../src/services/Bin/binGetDetailsItemsService.ts","../../../src/prisma/index.ts"],"sourcesContent":["import { MessagesError } from \"../../constants/messages.api\";\r\nimport prismaClient from \"../../prisma\";\r\n\r\ninterface IBinGetDetailsItemsService {\r\n  id: string;\r\n  idUserOwner?: string | null;\r\n}\r\n\r\nclass BinGetDetailsItemsService {\r\n  async execute({ id, idUserOwner }: IBinGetDetailsItemsService) {\r\n    const where: any = null;\r\n\r\n    if (id) where.id = { contains: id, mode: \"insensitive\" };\r\n    if (idUserOwner) where.idUserOwner = { contains: idUserOwner, mode: \"insensitive\" };\r\n\r\n    const userExists = await prismaClient.users.findFirst({\r\n      where: {\r\n        id: idUserOwner,\r\n      },\r\n    });\r\n    \r\n    const binExists = await prismaClient.bin.findFirst({\r\n      where,\r\n    });\r\n\r\n    if (!userExists) {\r\n      return {\r\n        data: {\r\n          message:\r\n            \"Não foi possível realizar essa ação, esse usuário responsável pelo item não existe!\",\r\n          status: 404,\r\n        },\r\n      };\r\n    }\r\n\r\n    if (!binExists) {\r\n      return {\r\n        data: {\r\n          message:\r\n            \"Não foi possível realizar essa ação, o item não existe na lixeira!\",\r\n          status: 404,\r\n        },\r\n      };\r\n    }\r\n\r\n    try {\r\n      return {\r\n        data: {\r\n          items: binExists,\r\n          status: 200,\r\n        },\r\n      };\r\n    } catch (err) {\r\n      return {\r\n        data: {\r\n          message: `${MessagesError.GetDetailsMessageError} ${err}`,\r\n          status: 500,\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport { BinGetDetailsItemsService };\r\n","import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prismaClient = new PrismaClient()\r\n\r\nexport default prismaClient;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAA6B;AAE7B,IAAM,eAAe,IAAI,2BAAa;AAEtC,IAAO,iBAAQ;;;ADIf,IAAM,4BAAN,MAAgC;AAAA,EACxB,QAAQ,IAAiD;AAAA,+CAAjD,EAAE,IAAI,YAAY,GAA+B;AAC7D,YAAM,QAAa;AAEnB,UAAI,GAAI,OAAM,KAAK,EAAE,UAAU,IAAI,MAAM,cAAc;AACvD,UAAI,YAAa,OAAM,cAAc,EAAE,UAAU,aAAa,MAAM,cAAc;AAElF,YAAM,aAAa,MAAM,eAAa,MAAM,UAAU;AAAA,QACpD,OAAO;AAAA,UACL,IAAI;AAAA,QACN;AAAA,MACF,CAAC;AAED,YAAM,YAAY,MAAM,eAAa,IAAI,UAAU;AAAA,QACjD;AAAA,MACF,CAAC;AAED,UAAI,CAAC,YAAY;AACf,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,SACE;AAAA,YACF,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,UAAI,CAAC,WAAW;AACd,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,SACE;AAAA,YACF,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,UAAI;AACF,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,OAAO;AAAA,YACP,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF,SAAS,KAAK;AACZ,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,SAAS,oFAAuC,IAAI,GAAG;AAAA,YACvD,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AACF;","names":[]}