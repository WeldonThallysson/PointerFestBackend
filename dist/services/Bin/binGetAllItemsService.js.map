{"version":3,"sources":["../../../src/services/Bin/binGetAllItemsService.ts","../../../src/prisma/index.ts"],"sourcesContent":["import { MessagesError } from \"../../constants/messages.api\";\r\nimport { TypesAccess } from \"../../keys/typeAccess/typesAccess\";\r\nimport prismaClient from \"../../prisma\";\r\n\r\ninterface IBinGetAllItemsService {\r\n  tableName?: string;\r\n  idUserOwner?: string;\r\n  page?: number;\r\n  limit?: number;\r\n}\r\n\r\nclass BinGetAllItemsService {\r\n  async execute({\r\n    tableName,\r\n    idUserOwner,\r\n    page,\r\n    limit,\r\n  }: IBinGetAllItemsService) {\r\n    const where: any = null;\r\n\r\n    const userExists = await prismaClient.users.findFirst({\r\n      where: {\r\n        id: idUserOwner,\r\n      },\r\n    });\r\n\r\n    if (!userExists) {\r\n      return {\r\n        data: {\r\n          message: \"Não foi possível realizar essa ação, o usuário não existe\",\r\n          status: 403,\r\n        },\r\n      };\r\n    }\r\n\r\n    if (\r\n        idUserOwner !== userExists.id &&\r\n      (userExists.typeAccess === TypesAccess.User ||\r\n        userExists.typeAccess === TypesAccess.Promoter ||\r\n        userExists.typeAccess === TypesAccess.Worker)\r\n    ) {\r\n      return {\r\n        data: {\r\n          message:\r\n            \"Não foi possível realizar essa ação, sua conta não tem permissão para realizar essa ação\",\r\n          status: 403,\r\n        },\r\n      };\r\n    }\r\n\r\n    if (tableName) where.tableName = { contains: tableName, mode: \"insensitive\" };\r\n    if (idUserOwner) where.idUserOwner = { contains: idUserOwner, mode: \"insensitive\" };\r\n\r\n    const shouldPaginate = page !== undefined || limit !== undefined;\r\n    const skip = shouldPaginate ? (page ?? 1) - 1 + (limit ?? 10) : undefined;\r\n    const take = shouldPaginate ? limit ?? 10 : undefined;\r\n\r\n    try {\r\n      const binItems = await prismaClient.bin.findMany({\r\n        where,\r\n        skip,\r\n        take,\r\n        orderBy: { created_At: \"desc\" },\r\n        select: {\r\n          id: true,\r\n          tableName: true,\r\n          data: true,\r\n          created_At: true,\r\n          updated_At: true,\r\n          itemId: true,\r\n        },\r\n      });\r\n\r\n      const binItemsCount = await prismaClient.bin.count();\r\n      const totalPages = shouldPaginate\r\n        ? Math.ceil(binItemsCount / (limit ?? 10))\r\n        : 1;\r\n\r\n      return {\r\n        data: {\r\n          items: binItems,\r\n          totalItems: binItemsCount,\r\n          totalPages: totalPages,\r\n          currentPage: shouldPaginate ? page ?? 1 : 1,\r\n          status: 200,\r\n        },\r\n      };\r\n    } catch (err) {\r\n      return {\r\n        data: {\r\n          message: `${MessagesError.GetAllMessageError} ${err}`,\r\n          status: 500,\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport { BinGetAllItemsService };\r\n","import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prismaClient = new PrismaClient()\r\n\r\nexport default prismaClient;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAA6B;AAE7B,IAAM,eAAe,IAAI,2BAAa;AAEtC,IAAO,iBAAQ;;;ADOf,IAAM,wBAAN,MAA4B;AAAA,EACpB,QAAQ,IAKa;AAAA,+CALb;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAA2B;AACzB,YAAM,QAAa;AAEnB,YAAM,aAAa,MAAM,eAAa,MAAM,UAAU;AAAA,QACpD,OAAO;AAAA,UACL,IAAI;AAAA,QACN;AAAA,MACF,CAAC;AAED,UAAI,CAAC,YAAY;AACf,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,SAAS;AAAA,YACT,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,UACI,gBAAgB,WAAW,OAC5B,WAAW,sCACV,WAAW,4CACX,WAAW,uCACb;AACA,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,SACE;AAAA,YACF,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,UAAI,UAAW,OAAM,YAAY,EAAE,UAAU,WAAW,MAAM,cAAc;AAC5E,UAAI,YAAa,OAAM,cAAc,EAAE,UAAU,aAAa,MAAM,cAAc;AAElF,YAAM,iBAAiB,SAAS,UAAa,UAAU;AACvD,YAAM,OAAO,kBAAkB,sBAAQ,KAAK,KAAK,wBAAS,MAAM;AAChE,YAAM,OAAO,iBAAiB,wBAAS,KAAK;AAE5C,UAAI;AACF,cAAM,WAAW,MAAM,eAAa,IAAI,SAAS;AAAA,UAC/C;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAS,EAAE,YAAY,OAAO;AAAA,UAC9B,QAAQ;AAAA,YACN,IAAI;AAAA,YACJ,WAAW;AAAA,YACX,MAAM;AAAA,YACN,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,QAAQ;AAAA,UACV;AAAA,QACF,CAAC;AAED,cAAM,gBAAgB,MAAM,eAAa,IAAI,MAAM;AACnD,cAAM,aAAa,iBACf,KAAK,KAAK,iBAAiB,wBAAS,GAAG,IACvC;AAEJ,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,OAAO;AAAA,YACP,YAAY;AAAA,YACZ;AAAA,YACA,aAAa,iBAAiB,sBAAQ,IAAI;AAAA,YAC1C,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF,SAAS,KAAK;AACZ,eAAO;AAAA,UACL,MAAM;AAAA,YACJ,SAAS,iFAAmC,IAAI,GAAG;AAAA,YACnD,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AACF;","names":[]}