{"version":3,"sources":["../../src/middlewares/isLogged.ts"],"sourcesContent":["import {Request, Response, NextFunction} from 'express'\r\nimport { verify } from 'jsonwebtoken'\r\n\r\n\r\ninterface IVerificationToken {\r\n    sub: string;\r\n}\r\n\r\n\r\nexport const isLogged = (req: Request, res: Response, next: NextFunction) => {\r\n    const loggedToken = req.headers.authorization;\r\n\r\n    if(!loggedToken){\r\n        return res.status(401).json({\r\n            status: 401,\r\n            message: \"Solicitação necessita do token de autenticação, faça o login.\"\r\n        }).end()\r\n    }\r\n\r\n    const [, token] = loggedToken.split(\" \");\r\n\r\n    try {\r\n        const {sub} = verify(token, process.env.JWT_SECRET) as IVerificationToken\r\n        req.user_id = sub;\r\n        console.log(\"Verificação de token concluída\")\r\n    }\r\n    \r\n    \r\n    catch(err){\r\n        res.status(401).json({\r\n            status: 401,\r\n            message: \"Solicitação falhou, ocorreu algum erro na verificação do token.\"\r\n        }).end();\r\n\r\n    }\r\n\r\n    return next()\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAuB;AAQhB,IAAM,WAAW,CAAC,KAAc,KAAe,SAAuB;AACzE,QAAM,cAAc,IAAI,QAAQ;AAEhC,MAAG,CAAC,aAAY;AACZ,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,MACxB,QAAQ;AAAA,MACR,SAAS;AAAA,IACb,CAAC,EAAE,IAAI;AAAA,EACX;AAEA,QAAM,CAAC,EAAE,KAAK,IAAI,YAAY,MAAM,GAAG;AAEvC,MAAI;AACA,UAAM,EAAC,IAAG,QAAI,4BAAO,OAAO,QAAQ,IAAI,UAAU;AAClD,QAAI,UAAU;AACd,YAAQ,IAAI,yCAAgC;AAAA,EAChD,SAGM,KAAI;AACN,QAAI,OAAO,GAAG,EAAE,KAAK;AAAA,MACjB,QAAQ;AAAA,MACR,SAAS;AAAA,IACb,CAAC,EAAE,IAAI;AAAA,EAEX;AAEA,SAAO,KAAK;AAChB;","names":[]}