{"version":3,"sources":["../../../src/utils/validationsServices/validationsCouponsService.ts","../../../src/utils/validators/validatorFieldsEmpty.ts"],"sourcesContent":["import { validatorFieldsEmpty } from \"../validators/validatorFieldsEmpty\";\r\n\r\ninterface IParamsCouponsService {\r\n  idUserOwner: string\r\n \r\n}\r\n\r\nexport const validationsCouponsService = ({\r\n    idUserOwner,\r\n\r\n \r\n\r\n}: IParamsCouponsService) => \r\n  {\r\n  const validatorEmpty = validatorFieldsEmpty(\r\n    idUserOwner,\r\n\r\n  );\r\n\r\n  if (validatorEmpty) {\r\n    return {\r\n      data: {\r\n        message:\r\n          \"Não foi possível realizar está ação, Preencha todos os campos obrigatórios.\", //  (nome, e-mail, senha, cpf, telefone, data de nascimento, residencia, bairro, endereço, cidade e genero)\r\n        fields: [\r\n          \"idUserOwner\",\r\n        ],\r\n        status: 400,\r\n      },\r\n    };\r\n  }\r\n\r\n \r\n \r\n};\r\n","\r\n\r\n\r\nexport const validatorFieldsEmpty = (...fields: (string | number | null)[]): boolean => {\r\n    return fields.some(field => !field ||  field === \"\" || field === null)\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACGO,IAAM,uBAAuB,IAAI,WAAgD;AACpF,SAAO,OAAO,KAAK,WAAS,CAAC,SAAU,UAAU,MAAM,UAAU,IAAI;AACzE;;;ADEO,IAAM,4BAA4B,CAAC;AAAA,EACtC;AAIJ,MACE;AACA,QAAM,iBAAiB;AAAA,IACrB;AAAA,EAEF;AAEA,MAAI,gBAAgB;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,QACJ,SACE;AAAA;AAAA,QACF,QAAQ;AAAA,UACN;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF;AAIF;","names":[]}