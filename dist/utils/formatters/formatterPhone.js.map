{"version":3,"sources":["../../../src/utils/formatters/formatterPhone.ts"],"sourcesContent":["export const separatePhoneNumber = (phone: string) => {\r\n  // Remove todos os caracteres não numéricos\r\n  const cleanedPhone = phone.replace(/\\D/g, \"\");\r\n\r\n  // Regex para capturar código do país, DDD e número (código de país pode ter até 3 dígitos)\r\n  const regex = /^(\\d{1,3})(\\d{2})(\\d{9,})$/; // Exemplo: \"55\" + \"11\" + \"999999999\"\r\n  \r\n  const match = cleanedPhone.match(regex);\r\n  \r\n  if (!match) {\r\n      throw new Error(\"Número de telefone inválido.\");\r\n  }\r\n\r\n  // Desestruturação dos grupos da regex\r\n  const [, country, area, number] = match;\r\n  \r\n  return {\r\n      country, // Código do país (1-3 dígitos)\r\n      area,    // DDD (2 dígitos)\r\n      number,  // Número de telefone (9 ou mais dígitos)\r\n  };\r\n};\r\n\r\n\r\nexport const formatPhoneNumber = (phone: string) =>  {\r\n  // Remove caracteres não numéricos\r\n  const digits = phone.replace(/\\D/g, \"\");\r\n\r\n  // Formata no padrão (xx) xxxxx-xxxx\r\n  if (digits.length === 11) {\r\n    return `(${digits.slice(0, 2)}) ${digits.slice(2, 7)}-${digits.slice(7)}`;\r\n  }\r\n\r\n  // Formata no padrão (xx) xxxx-xxxx (caso não tenha 11 dígitos)\r\n  if (digits.length === 10) {\r\n    return `(${digits.slice(0, 2)}) ${digits.slice(2, 6)}-${digits.slice(6)}`;\r\n  }\r\n\r\n  // Retorna o número como está se não tiver 10 ou 11 dígitos\r\n  return phone;\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,sBAAsB,CAAC,UAAkB;AAEpD,QAAM,eAAe,MAAM,QAAQ,OAAO,EAAE;AAG5C,QAAM,QAAQ;AAEd,QAAM,QAAQ,aAAa,MAAM,KAAK;AAEtC,MAAI,CAAC,OAAO;AACR,UAAM,IAAI,MAAM,oCAA8B;AAAA,EAClD;AAGA,QAAM,CAAC,EAAE,SAAS,MAAM,MAAM,IAAI;AAElC,SAAO;AAAA,IACH;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,EACJ;AACF;AAGO,IAAM,oBAAoB,CAAC,UAAmB;AAEnD,QAAM,SAAS,MAAM,QAAQ,OAAO,EAAE;AAGtC,MAAI,OAAO,WAAW,IAAI;AACxB,WAAO,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,OAAO,MAAM,CAAC,CAAC;AAAA,EACzE;AAGA,MAAI,OAAO,WAAW,IAAI;AACxB,WAAO,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,OAAO,MAAM,CAAC,CAAC;AAAA,EACzE;AAGA,SAAO;AACT;","names":[]}